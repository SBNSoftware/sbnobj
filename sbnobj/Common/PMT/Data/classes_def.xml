<!--
  
  ROOT dictionary generation for:
  
  * `sbn::PMTconfiguration
  
  
  Reminder:
  
  * include `art::Wrapper` lines for objects that we would like to put into the event
  * include the non-wrapper lines for all objects on the `art::Wrapper` lines
    and for all objects that are data members of those objects.
  
  -->


<lcgdict>
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!-- sbn::PMTconfiguration -->

  <!--   class -->
  <class name="sbn::PMTconfiguration" ClassVersion="11" >
   <version ClassVersion="11" checksum="2540301784"/>
   <version ClassVersion="10" checksum="3715080124"/>
  </class>
  
    <!-- dependencies -->
  <class name="std::vector<sbn::V1730Configuration>" />
  <class name="sbn::V1730Configuration" ClassVersion="12" >
   <version ClassVersion="12" checksum="2136999953"/>
   <version ClassVersion="11" checksum="1152380560"/>
   <version ClassVersion="10" checksum="1059138314"/>
  </class>
  <class name="std::vector<sbn::V1730channelConfiguration>" />
  <class name="sbn::V1730channelConfiguration" ClassVersion="11" >
   <version ClassVersion="11" checksum="566061189"/>
   <version ClassVersion="10" checksum="315565871"/>
  </class>

    <!-- art pointers and wrappers -->
  <class name="art::Ptr<sbn::PMTconfiguration>"/>
  <class name="art::Wrapper<sbn::PMTconfiguration>"/>
  
  <!-- PMTBeamSignal classes -->
  <class name ="art::Wrapper<vector<sbn::timing::PMTBeamSignal> >"/>
  <class name ="sbn::timing::PMTBeamSignal"/>
  <class name ="vector<sbn::timing::PMTBeamSignal>"/>
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!-- copy&paste templates for: -->
  <!-- PROD -->

    <!-- class -->
  <!--
  <class name="PROD"/>
  -->

    <!-- schema evolution rules -->
      <!-- version 11 -->
    
    <!-- dependencies -->
    <!-- art pointers and wrappers -->
      <!-- data product collection (PROD) -->
  <!--
  <class name="art::Ptr<PROD>"/>
  <class name="std::vector<PROD>"/>
  <class name="art::Wrapper<std::vector<PROD>>"/>
    -->

    <!-- associations and wrappers (PROD <==> OTHER) -->
  <!--
  <class name="art::Assns<PROD, OTHER, void>"/>
  <class name="art::Assns<OTHER, PROD, void>"/>
  <class name="std::pair<art::Ptr<PROD>, art::Ptr<OTHER>>"/>
  <class name="art::Wrapper<art::Assns<OTHER, PROD, void>>"/>
  <class name="std::pair<art::Ptr<OTHER>, art::Ptr<PROD>>"/>
  <class name="art::Wrapper<art::Assns<OTHER, PROD, void>>"/>
    -->

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
</lcgdict>
